


create view ARF_LINE_ITEM_MV_PRODUCT
as
SELECT
  COUNT(*) AS NUM_LINE_ITEMS,
  ITEM.SUBMIT_DAY_ID AS SUBMIT_DAY_ID,
  DAY.DAY_TIMESTAMP AS DAY_TIMESTAMP,
  ITEM.SUBMITTED_SITE_ID AS SUBMIT_SITE_ID,
  ITEM.SUBMIT_SALES_CHANNEL_ID AS SUBMIT_SALES_CHANNEL_ID,
  ITEM.SEGCLSTR_ID AS SEGMENTCLUSTER_ID,
  ITEM.AGENT_ID AS AGENT_ID,
  ITEM.PRODUCT_ID AS PRODUCT_ID,
  SUM(ITEM.QUANTITY) AS TOTAL_QUANTITY,
  SUM(ITEM.STANDARD_UNIT_PRICE) AS TOTAL_STD_UNIT_PRICE,
  SUM(ITEM.STANDARD_NET_REVENUE) AS TOTAL_STD_NET_REVENUE,
  SUM(ITEM.STANDARD_GROSS_REVENUE) AS TOTAL_STD_GROSS_REVENUE,
  SUM(ITEM.STANDARD_DISCOUNT_AMOUNT) AS TOTAL_STD_DISCOUNT,
  SUM(ITEM.STANDARD_MARKDOWN_DISC_AMOUNT) AS TOTAL_STD_MARKDOWN_DISCOUNT,
  SUM(ITEM.STANDARD_ORDER_SHIPPING_ALLOC) AS TOTAL_STD_ORDER_SHIP_ALLOC,
  SUM(ITEM.STANDARD_ORDER_TAX_ALLOC) AS TOTAL_STD_ORDER_TAX_ALLOC,
  SUM(ITEM.STANDARD_ORDER_DISCOUNT_ALLOC) AS TOTAL_STD_ORDER_DSCNT_ALLOC,
  SUM(ITEM.STANDARD_APPSMT_CDT_ALLOC_AMT) AS TOTAL_STD_APPSMT_CRED_ALLOC,
  SUM(ITEM.STANDARD_APPSMT_DBT_ALLOC_AMT) AS TOTAL_STD_APPSMT_DEBIT_ALLOC,
  SUM(ITEM.STANDARD_PRICE_OVERRIDE_AMT) AS TOTAL_STD_PRICE_OVERRIDE
FROM
  ARF_LINE_ITEM ITEM,
  ARF_TIME_DAY DAY
WHERE
  ITEM.SUBMIT_DAY_ID = DAY.ID
GROUP BY
  ITEM.SUBMIT_DAY_ID,
  DAY.DAY_TIMESTAMP,
  ITEM.SUBMIT_SALES_CHANNEL_ID,
  ITEM.SEGCLSTR_ID,
  ITEM.AGENT_ID,
  ITEM.PRODUCT_ID,
  ITEM.SUBMITTED_SITE_ID
;


create view ARF_LINE_ITEM_MV_SUPPL_ORDERS
as
SELECT
  COUNT(*) AS NUM_LINE_ITEMS,
  ITEM.SUBMIT_DAY_ID AS SUBMIT_DAY_ID,
  DAY.DAY_TIMESTAMP AS DAY_TIMESTAMP,
  ITEM.SUBMITTED_SITE_ID AS SUBMIT_SITE_ID,
  ITEM.ORDER_ID AS ORDER_ID,
  SUM(ITEM.QUANTITY) AS TOTAL_QUANTITY,
  SUM(ITEM.STANDARD_UNIT_PRICE) AS TOTAL_STD_UNIT_PRICE,
  SUM(ITEM.STANDARD_NET_REVENUE) AS TOTAL_STD_NET_REVENUE,
  SUM(ITEM.STANDARD_GROSS_REVENUE) AS TOTAL_STD_GROSS_REVENUE,
  SUM(ITEM.STANDARD_DISCOUNT_AMOUNT) AS TOTAL_STD_DISCOUNT,
  SUM(ITEM.STANDARD_MARKDOWN_DISC_AMOUNT) AS TOTAL_STD_MARKDOWN_DISCOUNT,
  SUM(ITEM.STANDARD_ORDER_SHIPPING_ALLOC) AS TOTAL_STD_ORDER_SHIP_ALLOC,
  SUM(ITEM.STANDARD_ORDER_TAX_ALLOC) AS TOTAL_STD_ORDER_TAX_ALLOC,
  SUM(ITEM.STANDARD_ORDER_DISCOUNT_ALLOC) AS TOTAL_STD_ORDER_DSCNT_ALLOC,
  SUM(ITEM.STANDARD_APPSMT_CDT_ALLOC_AMT) AS TOTAL_STD_APPSMT_CRED_ALLOC,
  SUM(ITEM.STANDARD_APPSMT_DBT_ALLOC_AMT) AS TOTAL_STD_APPSMT_DEBIT_ALLOC,
  SUM(ITEM.STANDARD_PRICE_OVERRIDE_AMT) AS TOTAL_STD_PRICE_OVERRIDE
FROM
  ARF_LINE_ITEM ITEM,
  ARF_TIME_DAY DAY
WHERE
  ITEM.SUBMIT_DAY_ID = DAY.ID
GROUP BY
  ITEM.SUBMIT_DAY_ID,
  DAY.DAY_TIMESTAMP,
  ITEM.SUBMITTED_SITE_ID,
  ITEM.ORDER_ID
;


create view ARF_LINE_ITEM_MV_UNIQUE_ORDERS
as
SELECT
  COUNT(*) AS NUM_LINE_ITEMS,
  COUNT(DISTINCT ORDER_ID) AS NUM_ORDERS,
  ITEM.SUBMIT_DAY_ID AS SUBMIT_DAY_ID,
  DAY.DAY_TIMESTAMP AS DAY_TIMESTAMP,
  ITEM.SUBMITTED_SITE_ID AS SUBMIT_SITE_ID,
  SUM(ITEM.QUANTITY) AS TOTAL_QUANTITY,
  SUM(ITEM.STANDARD_UNIT_PRICE) AS TOTAL_STD_UNIT_PRICE,
  SUM(ITEM.STANDARD_NET_REVENUE) AS TOTAL_STD_NET_REVENUE,
  SUM(ITEM.STANDARD_GROSS_REVENUE) AS TOTAL_STD_GROSS_REVENUE,
  SUM(ITEM.STANDARD_DISCOUNT_AMOUNT) AS TOTAL_STD_DISCOUNT,
  SUM(ITEM.STANDARD_MARKDOWN_DISC_AMOUNT) AS TOTAL_STD_MARKDOWN_DISCOUNT,
  SUM(ITEM.STANDARD_ORDER_SHIPPING_ALLOC) AS TOTAL_STD_ORDER_SHIP_ALLOC,
  SUM(ITEM.STANDARD_ORDER_TAX_ALLOC) AS TOTAL_STD_ORDER_TAX_ALLOC,
  SUM(ITEM.STANDARD_ORDER_DISCOUNT_ALLOC) AS TOTAL_STD_ORDER_DSCNT_ALLOC,
  SUM(ITEM.STANDARD_APPSMT_CDT_ALLOC_AMT) AS TOTAL_STD_APPSMT_CRED_ALLOC,
  SUM(ITEM.STANDARD_APPSMT_DBT_ALLOC_AMT) AS TOTAL_STD_APPSMT_DEBIT_ALLOC,
  SUM(ITEM.STANDARD_PRICE_OVERRIDE_AMT) AS TOTAL_STD_PRICE_OVERRIDE
FROM
  ARF_LINE_ITEM ITEM,
  ARF_TIME_DAY DAY
WHERE
  ITEM.SUBMIT_DAY_ID = DAY.ID
GROUP BY
  ITEM.SUBMIT_DAY_ID,
  DAY.DAY_TIMESTAMP,
  ITEM.SUBMITTED_SITE_ID
;


create view ARF_PROMOTION_USAGE_MV
as
SELECT
  COUNT(*) AS NUM_PROMOS_USED,
  PROMO.DAY_ID AS DAY_ID,
  DAY.DAY_TIMESTAMP AS DAY_TIMESTAMP,
  PROMO.SITE_ID AS SITE_ID,
  PROMO.PROMOTION_ID AS PROMOTION_ID,
  SUM(PROMO.QUANTITY) AS TOTAL_QUANTITY,
  SUM(PROMO.STANDARD_DISCOUNT_AMOUNT) AS TOTAL_STD_DISCOUNT,
  SUM(PROMO.STANDARD_ORDER_NET_REVENUE) AS TOTAL_STD_ORD_NET_REVENUE,
  SUM(PROMO.STANDARD_NET_REVENUE) AS TOTAL_STD_NET_REVENUE
FROM
  ARF_PROMOTION_USAGE PROMO,
  ARF_TIME_DAY DAY
WHERE
  PROMO.DAY_ID = DAY.ID
GROUP BY
  PROMO.DAY_ID,
  DAY.DAY_TIMESTAMP,
  PROMO.SITE_ID,
  PROMO.PROMOTION_ID
;


commit;
